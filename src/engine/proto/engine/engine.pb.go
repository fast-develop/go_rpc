// Code generated by protoc-gen-go. DO NOT EDIT.
// source: engine.proto

package engine

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EngineRequest struct {
	TraceId              *string  `protobuf:"bytes,1,opt,name=TraceId" json:"TraceId,omitempty"`
	UserId               *string  `protobuf:"bytes,2,req,name=UserId" json:"UserId,omitempty"`
	DocIdList            []int32  `protobuf:"varint,3,rep,name=DocIdList" json:"DocIdList,omitempty"`
	FromList             []int32  `protobuf:"varint,4,rep,name=FromList" json:"FromList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineRequest) Reset()         { *m = EngineRequest{} }
func (m *EngineRequest) String() string { return proto.CompactTextString(m) }
func (*EngineRequest) ProtoMessage()    {}
func (*EngineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_770b178c3aab763f, []int{0}
}

func (m *EngineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineRequest.Unmarshal(m, b)
}
func (m *EngineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineRequest.Marshal(b, m, deterministic)
}
func (m *EngineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineRequest.Merge(m, src)
}
func (m *EngineRequest) XXX_Size() int {
	return xxx_messageInfo_EngineRequest.Size(m)
}
func (m *EngineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineRequest proto.InternalMessageInfo

func (m *EngineRequest) GetTraceId() string {
	if m != nil && m.TraceId != nil {
		return *m.TraceId
	}
	return ""
}

func (m *EngineRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *EngineRequest) GetDocIdList() []int32 {
	if m != nil {
		return m.DocIdList
	}
	return nil
}

func (m *EngineRequest) GetFromList() []int32 {
	if m != nil {
		return m.FromList
	}
	return nil
}

type RspInfo struct {
	DocId                *int32   `protobuf:"varint,1,req,name=DocId" json:"DocId,omitempty"`
	DocScore             *float32 `protobuf:"fixed32,2,req,name=DocScore" json:"DocScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspInfo) Reset()         { *m = RspInfo{} }
func (m *RspInfo) String() string { return proto.CompactTextString(m) }
func (*RspInfo) ProtoMessage()    {}
func (*RspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_770b178c3aab763f, []int{1}
}

func (m *RspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspInfo.Unmarshal(m, b)
}
func (m *RspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspInfo.Marshal(b, m, deterministic)
}
func (m *RspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspInfo.Merge(m, src)
}
func (m *RspInfo) XXX_Size() int {
	return xxx_messageInfo_RspInfo.Size(m)
}
func (m *RspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RspInfo proto.InternalMessageInfo

func (m *RspInfo) GetDocId() int32 {
	if m != nil && m.DocId != nil {
		return *m.DocId
	}
	return 0
}

func (m *RspInfo) GetDocScore() float32 {
	if m != nil && m.DocScore != nil {
		return *m.DocScore
	}
	return 0
}

type EngineResponse struct {
	ErrorId              *int32     `protobuf:"varint,1,req,name=ErrorId" json:"ErrorId,omitempty"`
	ErrorMsg             *string    `protobuf:"bytes,2,opt,name=ErrorMsg" json:"ErrorMsg,omitempty"`
	RspInfoList          []*RspInfo `protobuf:"bytes,3,rep,name=RspInfoList" json:"RspInfoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EngineResponse) Reset()         { *m = EngineResponse{} }
func (m *EngineResponse) String() string { return proto.CompactTextString(m) }
func (*EngineResponse) ProtoMessage()    {}
func (*EngineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_770b178c3aab763f, []int{2}
}

func (m *EngineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineResponse.Unmarshal(m, b)
}
func (m *EngineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineResponse.Marshal(b, m, deterministic)
}
func (m *EngineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineResponse.Merge(m, src)
}
func (m *EngineResponse) XXX_Size() int {
	return xxx_messageInfo_EngineResponse.Size(m)
}
func (m *EngineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EngineResponse proto.InternalMessageInfo

func (m *EngineResponse) GetErrorId() int32 {
	if m != nil && m.ErrorId != nil {
		return *m.ErrorId
	}
	return 0
}

func (m *EngineResponse) GetErrorMsg() string {
	if m != nil && m.ErrorMsg != nil {
		return *m.ErrorMsg
	}
	return ""
}

func (m *EngineResponse) GetRspInfoList() []*RspInfo {
	if m != nil {
		return m.RspInfoList
	}
	return nil
}

func init() {
	proto.RegisterType((*EngineRequest)(nil), "engine.EngineRequest")
	proto.RegisterType((*RspInfo)(nil), "engine.RspInfo")
	proto.RegisterType((*EngineResponse)(nil), "engine.EngineResponse")
}

func init() { proto.RegisterFile("engine.proto", fileDescriptor_770b178c3aab763f) }

var fileDescriptor_770b178c3aab763f = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x15, 0x97, 0x26, 0xe4, 0x4a, 0x5b, 0x38, 0x09, 0x64, 0x31, 0x45, 0x11, 0x43, 0xc4,
	0xd0, 0xa1, 0x13, 0x33, 0x6a, 0x11, 0x96, 0x60, 0x29, 0x74, 0x60, 0xac, 0xec, 0xa3, 0xaa, 0x04,
	0xbe, 0x70, 0x0e, 0xff, 0x1f, 0xd5, 0x4e, 0x11, 0x74, 0xb3, 0x3f, 0x3f, 0xdf, 0x7d, 0x0f, 0xce,
	0xc8, 0x6f, 0x77, 0x9e, 0x66, 0xad, 0x70, 0xc7, 0x98, 0xa7, 0x5b, 0xbd, 0x86, 0xf1, 0x32, 0x9e,
	0x56, 0xf4, 0xf5, 0x4d, 0xa1, 0xc3, 0x29, 0x14, 0xaf, 0xb2, 0xb1, 0x64, 0x9c, 0xce, 0xaa, 0xac,
	0x29, 0x71, 0x02, 0xf9, 0x3a, 0x90, 0x18, 0xa7, 0x55, 0xa5, 0x9a, 0x12, 0x2f, 0xa0, 0x5c, 0xb0,
	0x35, 0xee, 0x69, 0x17, 0x3a, 0x3d, 0xa8, 0x06, 0xcd, 0x10, 0xcf, 0xe1, 0xf4, 0x41, 0xf8, 0x33,
	0x92, 0x93, 0x3d, 0xa9, 0x6f, 0xa1, 0x58, 0x85, 0xd6, 0xf8, 0x77, 0xc6, 0x31, 0x0c, 0x63, 0x5e,
	0x67, 0x95, 0x4a, 0xd9, 0x05, 0xdb, 0x17, 0xcb, 0x42, 0x71, 0xa0, 0xaa, 0xdf, 0x60, 0x72, 0x50,
	0x08, 0x2d, 0xfb, 0x40, 0x7b, 0x87, 0xa5, 0x08, 0xcb, 0xdf, 0x4f, 0x11, 0x3c, 0x87, 0xad, 0x56,
	0xd1, 0xea, 0x06, 0x46, 0xfd, 0x82, 0x5f, 0x8f, 0xd1, 0x7c, 0x3a, 0xeb, 0x3b, 0xf6, 0x4f, 0xf3,
	0x7b, 0xc8, 0xd3, 0x68, 0xbc, 0x83, 0xe2, 0x71, 0xe3, 0xdd, 0x07, 0x09, 0x5e, 0x1e, 0x52, 0xff,
	0x8a, 0x5f, 0x5f, 0x1d, 0xe3, 0x24, 0xf3, 0x13, 0x00, 0x00, 0xff, 0xff, 0xab, 0x1a, 0xe9, 0xf7,
	0x38, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EngineClient is the client API for Engine service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EngineClient interface {
	Handler(ctx context.Context, in *EngineRequest, opts ...grpc.CallOption) (*EngineResponse, error)
}

type engineClient struct {
	cc *grpc.ClientConn
}

func NewEngineClient(cc *grpc.ClientConn) EngineClient {
	return &engineClient{cc}
}

func (c *engineClient) Handler(ctx context.Context, in *EngineRequest, opts ...grpc.CallOption) (*EngineResponse, error) {
	out := new(EngineResponse)
	err := c.cc.Invoke(ctx, "/engine.Engine/Handler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EngineServer is the server API for Engine service.
type EngineServer interface {
	Handler(context.Context, *EngineRequest) (*EngineResponse, error)
}

// UnimplementedEngineServer can be embedded to have forward compatible implementations.
type UnimplementedEngineServer struct {
}

func (*UnimplementedEngineServer) Handler(ctx context.Context, req *EngineRequest) (*EngineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handler not implemented")
}

func RegisterEngineServer(s *grpc.Server, srv EngineServer) {
	s.RegisterService(&_Engine_serviceDesc, srv)
}

func _Engine_Handler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EngineServer).Handler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.Engine/Handler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EngineServer).Handler(ctx, req.(*EngineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Engine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.Engine",
	HandlerType: (*EngineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handler",
			Handler:    _Engine_Handler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "engine.proto",
}
