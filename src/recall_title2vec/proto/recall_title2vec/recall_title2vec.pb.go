// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recall_title2vec.proto

package recall_title2vec

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecallTitle2VecRequest struct {
	TraceId              *string  `protobuf:"bytes,1,opt,name=TraceId" json:"TraceId,omitempty"`
	UserId               *string  `protobuf:"bytes,2,req,name=UserId" json:"UserId,omitempty"`
	DocIdList            []int32  `protobuf:"varint,3,rep,name=DocIdList" json:"DocIdList,omitempty"`
	FromList             []int32  `protobuf:"varint,4,rep,name=FromList" json:"FromList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecallTitle2VecRequest) Reset()         { *m = RecallTitle2VecRequest{} }
func (m *RecallTitle2VecRequest) String() string { return proto.CompactTextString(m) }
func (*RecallTitle2VecRequest) ProtoMessage()    {}
func (*RecallTitle2VecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad6e82a780bb516d, []int{0}
}

func (m *RecallTitle2VecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecallTitle2VecRequest.Unmarshal(m, b)
}
func (m *RecallTitle2VecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecallTitle2VecRequest.Marshal(b, m, deterministic)
}
func (m *RecallTitle2VecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecallTitle2VecRequest.Merge(m, src)
}
func (m *RecallTitle2VecRequest) XXX_Size() int {
	return xxx_messageInfo_RecallTitle2VecRequest.Size(m)
}
func (m *RecallTitle2VecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecallTitle2VecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecallTitle2VecRequest proto.InternalMessageInfo

func (m *RecallTitle2VecRequest) GetTraceId() string {
	if m != nil && m.TraceId != nil {
		return *m.TraceId
	}
	return ""
}

func (m *RecallTitle2VecRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *RecallTitle2VecRequest) GetDocIdList() []int32 {
	if m != nil {
		return m.DocIdList
	}
	return nil
}

func (m *RecallTitle2VecRequest) GetFromList() []int32 {
	if m != nil {
		return m.FromList
	}
	return nil
}

type RspInfo struct {
	DocId                *int32   `protobuf:"varint,1,req,name=DocId" json:"DocId,omitempty"`
	DocScore             *float32 `protobuf:"fixed32,2,req,name=DocScore" json:"DocScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspInfo) Reset()         { *m = RspInfo{} }
func (m *RspInfo) String() string { return proto.CompactTextString(m) }
func (*RspInfo) ProtoMessage()    {}
func (*RspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad6e82a780bb516d, []int{1}
}

func (m *RspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspInfo.Unmarshal(m, b)
}
func (m *RspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspInfo.Marshal(b, m, deterministic)
}
func (m *RspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspInfo.Merge(m, src)
}
func (m *RspInfo) XXX_Size() int {
	return xxx_messageInfo_RspInfo.Size(m)
}
func (m *RspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RspInfo proto.InternalMessageInfo

func (m *RspInfo) GetDocId() int32 {
	if m != nil && m.DocId != nil {
		return *m.DocId
	}
	return 0
}

func (m *RspInfo) GetDocScore() float32 {
	if m != nil && m.DocScore != nil {
		return *m.DocScore
	}
	return 0
}

type RecallTitle2VecResponse struct {
	ErrorId              *int32     `protobuf:"varint,1,req,name=ErrorId" json:"ErrorId,omitempty"`
	ErrorMsg             *string    `protobuf:"bytes,2,opt,name=ErrorMsg" json:"ErrorMsg,omitempty"`
	RspInfoList          []*RspInfo `protobuf:"bytes,3,rep,name=RspInfoList" json:"RspInfoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RecallTitle2VecResponse) Reset()         { *m = RecallTitle2VecResponse{} }
func (m *RecallTitle2VecResponse) String() string { return proto.CompactTextString(m) }
func (*RecallTitle2VecResponse) ProtoMessage()    {}
func (*RecallTitle2VecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad6e82a780bb516d, []int{2}
}

func (m *RecallTitle2VecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecallTitle2VecResponse.Unmarshal(m, b)
}
func (m *RecallTitle2VecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecallTitle2VecResponse.Marshal(b, m, deterministic)
}
func (m *RecallTitle2VecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecallTitle2VecResponse.Merge(m, src)
}
func (m *RecallTitle2VecResponse) XXX_Size() int {
	return xxx_messageInfo_RecallTitle2VecResponse.Size(m)
}
func (m *RecallTitle2VecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecallTitle2VecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecallTitle2VecResponse proto.InternalMessageInfo

func (m *RecallTitle2VecResponse) GetErrorId() int32 {
	if m != nil && m.ErrorId != nil {
		return *m.ErrorId
	}
	return 0
}

func (m *RecallTitle2VecResponse) GetErrorMsg() string {
	if m != nil && m.ErrorMsg != nil {
		return *m.ErrorMsg
	}
	return ""
}

func (m *RecallTitle2VecResponse) GetRspInfoList() []*RspInfo {
	if m != nil {
		return m.RspInfoList
	}
	return nil
}

func init() {
	proto.RegisterType((*RecallTitle2VecRequest)(nil), "recall_title2vec.RecallTitle2VecRequest")
	proto.RegisterType((*RspInfo)(nil), "recall_title2vec.RspInfo")
	proto.RegisterType((*RecallTitle2VecResponse)(nil), "recall_title2vec.RecallTitle2VecResponse")
}

func init() { proto.RegisterFile("recall_title2vec.proto", fileDescriptor_ad6e82a780bb516d) }

var fileDescriptor_ad6e82a780bb516d = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x40, 0xd3, 0x45, 0xac, 0x1d, 0xa2, 0xe0, 0x1c, 0x70, 0xf5, 0xd4, 0xf4, 0x54, 0x3d, 0xf4,
	0xd0, 0x6f, 0x40, 0x63, 0x13, 0xbd, 0x54, 0xf4, 0x88, 0x69, 0xb6, 0xa3, 0x21, 0x59, 0x3b, 0x65,
	0x76, 0xf5, 0xfb, 0x0d, 0x0b, 0x31, 0x06, 0x38, 0x70, 0x7d, 0x79, 0xb3, 0xf3, 0x76, 0x60, 0x2a,
	0x64, 0x1a, 0x6b, 0xdf, 0xfd, 0xd2, 0x5b, 0x2a, 0x7f, 0xc8, 0x14, 0xbd, 0xb0, 0x67, 0x9c, 0xec,
	0xf2, 0x6c, 0x01, 0xd3, 0x3a, 0xb0, 0x79, 0x40, 0x6f, 0x64, 0x6a, 0x5a, 0x7d, 0x93, 0xf3, 0x38,
	0x86, 0x78, 0x2e, 0x8d, 0xa1, 0xaa, 0xd5, 0x51, 0x1a, 0xe5, 0x09, 0x5e, 0xc0, 0xe9, 0xab, 0x23,
	0xa9, 0x5a, 0xad, 0x52, 0x95, 0x27, 0x78, 0x09, 0xc9, 0x8c, 0x4d, 0xd5, 0x3e, 0x2d, 0x9d, 0xd7,
	0x83, 0x74, 0x90, 0x0f, 0x71, 0x02, 0x67, 0x0f, 0xc2, 0x5f, 0x81, 0x9c, 0xac, 0x49, 0x76, 0x07,
	0x71, 0xed, 0xfa, 0xaa, 0xfb, 0x60, 0x3c, 0x87, 0x61, 0xf0, 0x75, 0x94, 0xaa, 0x8d, 0x3b, 0x63,
	0xf3, 0x62, 0x58, 0x28, 0x3c, 0xa8, 0x32, 0x0b, 0x57, 0x7b, 0x2d, 0xae, 0xe7, 0xce, 0xd1, 0x3a,
	0xe6, 0x5e, 0x84, 0xe5, 0xff, 0x74, 0x00, 0xcf, 0xee, 0x53, 0xab, 0x90, 0x57, 0xc0, 0x68, 0xbb,
	0xe9, 0x2f, 0x68, 0x54, 0x5e, 0x17, 0x7b, 0x97, 0xd8, 0x4a, 0xe5, 0x0a, 0xc6, 0x3b, 0xdb, 0x70,
	0x01, 0xf1, 0x63, 0xd3, 0xb5, 0x96, 0x04, 0xf3, 0x03, 0x83, 0x07, 0xef, 0x74, 0x73, 0x7b, 0x84,
	0xb9, 0xf9, 0xc5, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3f, 0xfd, 0x78, 0x70, 0x97, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecallTitle2VecClient is the client API for RecallTitle2Vec service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecallTitle2VecClient interface {
	Handler(ctx context.Context, in *RecallTitle2VecRequest, opts ...grpc.CallOption) (*RecallTitle2VecResponse, error)
}

type recallTitle2VecClient struct {
	cc *grpc.ClientConn
}

func NewRecallTitle2VecClient(cc *grpc.ClientConn) RecallTitle2VecClient {
	return &recallTitle2VecClient{cc}
}

func (c *recallTitle2VecClient) Handler(ctx context.Context, in *RecallTitle2VecRequest, opts ...grpc.CallOption) (*RecallTitle2VecResponse, error) {
	out := new(RecallTitle2VecResponse)
	err := c.cc.Invoke(ctx, "/recall_title2vec.RecallTitle2Vec/Handler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecallTitle2VecServer is the server API for RecallTitle2Vec service.
type RecallTitle2VecServer interface {
	Handler(context.Context, *RecallTitle2VecRequest) (*RecallTitle2VecResponse, error)
}

// UnimplementedRecallTitle2VecServer can be embedded to have forward compatible implementations.
type UnimplementedRecallTitle2VecServer struct {
}

func (*UnimplementedRecallTitle2VecServer) Handler(ctx context.Context, req *RecallTitle2VecRequest) (*RecallTitle2VecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handler not implemented")
}

func RegisterRecallTitle2VecServer(s *grpc.Server, srv RecallTitle2VecServer) {
	s.RegisterService(&_RecallTitle2Vec_serviceDesc, srv)
}

func _RecallTitle2Vec_Handler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecallTitle2VecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecallTitle2VecServer).Handler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recall_title2vec.RecallTitle2Vec/Handler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecallTitle2VecServer).Handler(ctx, req.(*RecallTitle2VecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecallTitle2Vec_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recall_title2vec.RecallTitle2Vec",
	HandlerType: (*RecallTitle2VecServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handler",
			Handler:    _RecallTitle2Vec_Handler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recall_title2vec.proto",
}
