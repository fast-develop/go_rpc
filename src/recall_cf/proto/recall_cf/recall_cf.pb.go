// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recall_cf.proto

package recall_cf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecallCFRequest struct {
	TraceId              *string  `protobuf:"bytes,1,opt,name=TraceId" json:"TraceId,omitempty"`
	UserId               *string  `protobuf:"bytes,2,req,name=UserId" json:"UserId,omitempty"`
	DocIdList            []int32  `protobuf:"varint,3,rep,name=DocIdList" json:"DocIdList,omitempty"`
	FromList             []int32  `protobuf:"varint,4,rep,name=FromList" json:"FromList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecallCFRequest) Reset()         { *m = RecallCFRequest{} }
func (m *RecallCFRequest) String() string { return proto.CompactTextString(m) }
func (*RecallCFRequest) ProtoMessage()    {}
func (*RecallCFRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8268368cde3db73, []int{0}
}

func (m *RecallCFRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecallCFRequest.Unmarshal(m, b)
}
func (m *RecallCFRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecallCFRequest.Marshal(b, m, deterministic)
}
func (m *RecallCFRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecallCFRequest.Merge(m, src)
}
func (m *RecallCFRequest) XXX_Size() int {
	return xxx_messageInfo_RecallCFRequest.Size(m)
}
func (m *RecallCFRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecallCFRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecallCFRequest proto.InternalMessageInfo

func (m *RecallCFRequest) GetTraceId() string {
	if m != nil && m.TraceId != nil {
		return *m.TraceId
	}
	return ""
}

func (m *RecallCFRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *RecallCFRequest) GetDocIdList() []int32 {
	if m != nil {
		return m.DocIdList
	}
	return nil
}

func (m *RecallCFRequest) GetFromList() []int32 {
	if m != nil {
		return m.FromList
	}
	return nil
}

type RspInfo struct {
	DocId                *int32   `protobuf:"varint,1,req,name=DocId" json:"DocId,omitempty"`
	DocScore             *float32 `protobuf:"fixed32,2,req,name=DocScore" json:"DocScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspInfo) Reset()         { *m = RspInfo{} }
func (m *RspInfo) String() string { return proto.CompactTextString(m) }
func (*RspInfo) ProtoMessage()    {}
func (*RspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8268368cde3db73, []int{1}
}

func (m *RspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspInfo.Unmarshal(m, b)
}
func (m *RspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspInfo.Marshal(b, m, deterministic)
}
func (m *RspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspInfo.Merge(m, src)
}
func (m *RspInfo) XXX_Size() int {
	return xxx_messageInfo_RspInfo.Size(m)
}
func (m *RspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RspInfo proto.InternalMessageInfo

func (m *RspInfo) GetDocId() int32 {
	if m != nil && m.DocId != nil {
		return *m.DocId
	}
	return 0
}

func (m *RspInfo) GetDocScore() float32 {
	if m != nil && m.DocScore != nil {
		return *m.DocScore
	}
	return 0
}

type RecallCFResponse struct {
	ErrorId              *int32     `protobuf:"varint,1,req,name=ErrorId" json:"ErrorId,omitempty"`
	ErrorMsg             *string    `protobuf:"bytes,2,opt,name=ErrorMsg" json:"ErrorMsg,omitempty"`
	RspInfoList          []*RspInfo `protobuf:"bytes,3,rep,name=RspInfoList" json:"RspInfoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RecallCFResponse) Reset()         { *m = RecallCFResponse{} }
func (m *RecallCFResponse) String() string { return proto.CompactTextString(m) }
func (*RecallCFResponse) ProtoMessage()    {}
func (*RecallCFResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8268368cde3db73, []int{2}
}

func (m *RecallCFResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecallCFResponse.Unmarshal(m, b)
}
func (m *RecallCFResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecallCFResponse.Marshal(b, m, deterministic)
}
func (m *RecallCFResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecallCFResponse.Merge(m, src)
}
func (m *RecallCFResponse) XXX_Size() int {
	return xxx_messageInfo_RecallCFResponse.Size(m)
}
func (m *RecallCFResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecallCFResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecallCFResponse proto.InternalMessageInfo

func (m *RecallCFResponse) GetErrorId() int32 {
	if m != nil && m.ErrorId != nil {
		return *m.ErrorId
	}
	return 0
}

func (m *RecallCFResponse) GetErrorMsg() string {
	if m != nil && m.ErrorMsg != nil {
		return *m.ErrorMsg
	}
	return ""
}

func (m *RecallCFResponse) GetRspInfoList() []*RspInfo {
	if m != nil {
		return m.RspInfoList
	}
	return nil
}

func init() {
	proto.RegisterType((*RecallCFRequest)(nil), "recall_cf.RecallCFRequest")
	proto.RegisterType((*RspInfo)(nil), "recall_cf.RspInfo")
	proto.RegisterType((*RecallCFResponse)(nil), "recall_cf.RecallCFResponse")
}

func init() { proto.RegisterFile("recall_cf.proto", fileDescriptor_b8268368cde3db73) }

var fileDescriptor_b8268368cde3db73 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x15, 0x97, 0x92, 0xe6, 0x2a, 0x48, 0xb9, 0xc9, 0x2a, 0x8b, 0x95, 0x85, 0x88, 0xa1,
	0x43, 0x1f, 0x01, 0x4a, 0x85, 0x25, 0x60, 0x08, 0x20, 0x36, 0x50, 0x64, 0x5f, 0x11, 0x52, 0xc8,
	0x85, 0x73, 0x78, 0x7f, 0x54, 0xb7, 0xb4, 0x45, 0x62, 0xf4, 0x77, 0xbf, 0x7f, 0x7f, 0x3e, 0xc8,
	0x85, 0x5c, 0xdd, 0x34, 0x6f, 0x6e, 0x35, 0xeb, 0x84, 0x7b, 0xc6, 0x6c, 0x07, 0x8a, 0x17, 0xc8,
	0xab, 0x78, 0xb8, 0x5e, 0x56, 0xf4, 0xf5, 0x4d, 0xa1, 0xc7, 0x1c, 0xd2, 0x27, 0xa9, 0x1d, 0x59,
	0xaf, 0x13, 0x93, 0x94, 0x19, 0x9e, 0xc2, 0xf1, 0x73, 0x20, 0xb1, 0x5e, 0x2b, 0xa3, 0xca, 0x0c,
	0xcf, 0x20, 0x5b, 0xb0, 0xb3, 0xfe, 0xee, 0x23, 0xf4, 0x7a, 0x60, 0x06, 0xe5, 0x10, 0x27, 0x30,
	0x5a, 0x0a, 0x7f, 0x46, 0x72, 0xb4, 0x26, 0xc5, 0x25, 0xa4, 0x55, 0xe8, 0x6c, 0xbb, 0x62, 0x3c,
	0x81, 0x61, 0xcc, 0xeb, 0xc4, 0xa8, 0x4d, 0x76, 0xc1, 0xee, 0xd1, 0xb1, 0x50, 0x2c, 0x54, 0xc5,
	0x2b, 0x4c, 0xf6, 0x12, 0xa1, 0xe3, 0x36, 0xd0, 0xda, 0xe2, 0x46, 0x84, 0xe5, 0xf0, 0x5a, 0x04,
	0xf7, 0xe1, 0x5d, 0xab, 0xe8, 0x75, 0x01, 0xe3, 0xed, 0x13, 0x3b, 0x93, 0xf1, 0x1c, 0x67, 0xfb,
	0xdf, 0x6e, 0xa7, 0xf3, 0x07, 0x18, 0xfd, 0xf6, 0xe3, 0x15, 0xa4, 0xb7, 0x75, 0xeb, 0x1b, 0x12,
	0x9c, 0x1e, 0x46, 0xff, 0x2e, 0x61, 0x7a, 0xfe, 0xef, 0x6c, 0xe3, 0xf6, 0x13, 0x00, 0x00, 0xff,
	0xff, 0xbf, 0xdd, 0xcb, 0x49, 0x51, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecallCFClient is the client API for RecallCF service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecallCFClient interface {
	Handler(ctx context.Context, in *RecallCFRequest, opts ...grpc.CallOption) (*RecallCFResponse, error)
}

type recallCFClient struct {
	cc *grpc.ClientConn
}

func NewRecallCFClient(cc *grpc.ClientConn) RecallCFClient {
	return &recallCFClient{cc}
}

func (c *recallCFClient) Handler(ctx context.Context, in *RecallCFRequest, opts ...grpc.CallOption) (*RecallCFResponse, error) {
	out := new(RecallCFResponse)
	err := c.cc.Invoke(ctx, "/recall_cf.RecallCF/Handler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecallCFServer is the server API for RecallCF service.
type RecallCFServer interface {
	Handler(context.Context, *RecallCFRequest) (*RecallCFResponse, error)
}

// UnimplementedRecallCFServer can be embedded to have forward compatible implementations.
type UnimplementedRecallCFServer struct {
}

func (*UnimplementedRecallCFServer) Handler(ctx context.Context, req *RecallCFRequest) (*RecallCFResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handler not implemented")
}

func RegisterRecallCFServer(s *grpc.Server, srv RecallCFServer) {
	s.RegisterService(&_RecallCF_serviceDesc, srv)
}

func _RecallCF_Handler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecallCFRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecallCFServer).Handler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recall_cf.RecallCF/Handler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecallCFServer).Handler(ctx, req.(*RecallCFRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecallCF_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recall_cf.RecallCF",
	HandlerType: (*RecallCFServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handler",
			Handler:    _RecallCF_Handler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recall_cf.proto",
}
